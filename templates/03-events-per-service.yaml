AWSTemplateFormatVersion: "2010-09-09"
Description: Creates CloudWatch Events related rules and targets to batch job

Parameters:
  Environment:
    Description: Name of batch environment
    Type: String
    AllowedValues:
      - dev
      - test
      - prod
  ServiceName:
      Description: Name of the service
      Type: String

  ImageSha:
    Type: String
    Description: image sha for the service

Resources:
    BatchJobQueue:
      Type: AWS::Batch::JobQueue
      Properties:
        ComputeEnvironmentOrder:
          - Order: 1
            ComputeEnvironment: !Sub arn:aws:batch:${AWS::Region}:${AWS::AccountId}:compute-environment/${Environment}
        Priority: 1
        State: ENABLED
        JobQueueName: !Ref ServiceName
    BatchJobDefinition:
      Type: AWS::Batch::JobDefinition
      Properties:
        Type: container
        ContainerProperties:
          ReadonlyRootFilesystem: false
          Privileged: true
          Vcpus: 2
          Memory: 2000
          JobRoleArn: !GetAtt JobeServiceRole.Arn
          Image: !Ref ImageSha
          Environment:
            - Value: S3_BUCKET_NAME
              Name: !Sub ${AWS::AccountId}-${Environment}-job
        JobDefinitionName: !Sub ${Environment}-${ServiceName}
        RetryStrategy:
          Attempts: 3
    JobeServiceRole:
        Type: AWS::IAM::Role
        Properties:
          Path: /
          AssumeRolePolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Principal:
                  Service: ecs-tasks.amazonaws.com
                Action: sts:AssumeRole
          Policies:
            - PolicyName: s3-access
              PolicyDocument:
                Version: 2012-10-17
                Statement:
                # TODO : FOR BETTER SEGGREGATION, YOU SHOULD REFINE THIS BASED ON FOLDER STRUCTURE. EACH SERVICE GETS ITS OWN FOLDER
                  - Resource: !Sub arn:aws:s3:::${AWS::AccountId}-${Environment}-job/*
                    Effect: Allow
                    Action:
                      - s3:*
            - PolicyName: ses-full-access
              PolicyDocument:
                Version: 2012-10-17
                Statement:
                  - Resource: "*"
                    Effect: Allow
                    Action:
                      - ses:*

    #TODO : YOU MAY NEED TO DEFINE THE TOPIC POLICY, WHICH I DIDNT SEE IN THE MAIN TEMPLATE

    # START : Currently Cloudformation AWS Events do not support triggering Batch as target. Its only supported via cli or console
    TriggerBatchLambda:
      Type: AWS::Lambda::Function
      Properties:
        Handler: index.handler
        Role:
          Fn::ImportValue:
            !Sub ${Environment}-cloudwatch-events-batch-submit-role-arn
        FunctionName: trigger-batch
        Environment:
          Variables:
            job_queue: !Ref BatchJobQueue
            job_definitionarn: !Ref BatchJobDefinition
        Code:
          ZipFile: !Sub |
            import boto3
            import os
            import uuid

            def handler(event,context):
                batch_client = boto3.client('batch')
                response = batch_client.submit_job(
                    jobName=str(uuid.uuid4()),
                    jobQueue=os.environ.get('job_queue'),
                    jobDefinition=os.environ.get('job_definitionarn')
                )
        Runtime: python3.6
    EventsRule:
      Type: AWS::Events::Rule
      Properties:
        Description: !Sub ${Environment}-${ServiceName}
        Name: !Sub ${Environment}-${ServiceName}
        ScheduleExpression: cron(0/2 * * * ? *)
        State: ENABLED
        Targets:
          - Arn: !GetAtt TriggerBatchLambda.Arn
            Id: TriggetBatch
    PermissionforEventstoInvokeLambda:
        Type: AWS::Lambda::Permission
        Properties:
          Action: lambda:InvokeFunction
          FunctionName: !Ref TriggerBatchLambda
          Principal: events.amazonaws.com
          SourceArn: !GetAtt EventsRule.Arn

    # END : Currently Cloudformation AWS Events do not support triggering Batch as target. Its only supported via cli or console
